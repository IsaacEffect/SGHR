@model SGHR.Web.ViewModel.Reservas.ActualizarReservaViewModel;
@{
    ViewData["Title"] = "Editar Reserva";
}
<h1>Editar Reserva</h1>
<h4>Detalles de la Reserva</h4>
<hr/>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            @Html.AntiForgeryToken()
            
            <input asp-for="Id" type="hidden" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <label asp-for="IdCliente" class="control-label"></label>
                <input asp-for="IdCliente" class="form-control" />
                <span asp-validation-for="IdCliente" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="IdCategoriaHabitacion" class="control-label"></label>
                <input asp-for="IdCategoriaHabitacion" class="form-control" />
                <span asp-validation-for="IdCategoriaHabitacion" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="NumeroHuespedes" class="control-label"></label>
                <input asp-for="NumeroHuespedes" class="form-control" />
                <span asp-validation-for="NumeroHuespedes" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="FechaEntrada" class="control-label"></label>
                <input asp-for="FechaEntrada" class="form-control" type="date" />
                <span asp-validation-for="FechaEntrada" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="FechaSalida" class="control-label"></label>
                <input asp-for="FechaSalida" class="form-control" type="date" />
                <span asp-validation-for="FechaSalida" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" class="form-control" asp-items="Html.GetEnumSelectList<SGHR.Domain.Enums.EstadoReserva>()"></select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.querySelectorAll('.fecha-input').forEach(function(input) {
            input.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length >= 2) {
                    value = value.substring(0,2) + '/' + value.substring(2);
                }
                if (value.length >= 5) {
                    value = value.substring(0,5) + '/' + value.substring(5,7);
                }
                e.target.value = value;
            });
            // Validación básica al salir del campo
            input.addEventListener('blur', function(e) {
                let value = e.target.value;
                if (value && value.length === 8) {
                    let parts = value.split('/');
                    let day = parseInt(parts[0]);
                    let month = parseInt(parts[1]);
                    let year = parseInt(parts[2]);
                    if (day > 31 || month > 12 || day < 1 || month < 1) {
                        e.target.classList.add('is-invalid');
                    } else {
                        e.target.classList.remove('is-invalid');
                    }
                }
            });
        });
    </script>
}