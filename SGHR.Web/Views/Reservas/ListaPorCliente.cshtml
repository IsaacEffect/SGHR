@model IEnumerable<SGHR.Web.ViewModel.Reservas.ReservasViewModel>
@using SGHR.Domain.Enums;
@{
    ViewData["Title"] = "Reservas por Cliente";
}

<h1>Reservas por Cliente</h1>

<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h6 class="card-title">
                    <i class="bi bi-person"></i> Información del Cliente
                </h6>
                @if (Model != null && Model.Any())
                {
                    <p class="mb-0">
                        <strong>Cliente ID:</strong> @Model.First().IdCliente
                    </p>
                    <small class="text-muted">Mostrando todas las reservas de este cliente</small>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4 d-flex align-items-end">
        <div class="d-flex gap-2">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Volver a todas las reservas
            </a>
            <a asp-action="Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Crear nueva Reserva
            </a>
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger" role="alert">
        <ul class="mb-0">
            @foreach (var modelStateEntry in ViewData.ModelState.Values)
            {
                foreach (var error in modelStateEntry.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<div class="table-responsive">
    <table class="table table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Id)</th>
                <th>@Html.DisplayNameFor(model => model.IdCliente)</th>
                <th>@Html.DisplayNameFor(model => model.IdCategoriaHabitacion)</th>
                <th>@Html.DisplayNameFor(model => model.NumeroHuespedes)</th>
                <th>@Html.DisplayNameFor(model => model.FechaEntrada)</th>
                <th>@Html.DisplayNameFor(model => model.FechaSalida)</th>
                <th>@Html.DisplayNameFor(model => model.Estado)</th>
                <th>@Html.DisplayNameFor(model => model.FechaCreacion)</th>
                <th>@Html.DisplayNameFor(Model => Model.FechaModificacion)</th>
                <th>@Html.DisplayNameFor(model => model.Activo)</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                        <td>@Html.DisplayFor(modelItem => item.IdCliente)</td>
                        <td>@Html.DisplayFor(modelItem => item.IdCategoriaHabitacion)</td>
                        <td>@Html.DisplayFor(modelItem => item.NumeroHuespedes)</td>
                        <td>@item.FechaEntrada.ToString("dd/MM/yyyy")</td>
                        <td>@item.FechaSalida.ToString("dd/MM/yyyy")</td>
                        <td>
                            @switch (item.Estado)
                            {
                                case EstadoReserva.Pendiente:
                                    <span class="badge bg-warning text-dark">@Html.DisplayFor(modelItem => item.EstadoDisplay)</span>
                                    break;
                                case EstadoReserva.Confirmada:
                                    <span class="badge bg-success">@Html.DisplayFor(modelItem => item.EstadoDisplay)</span>
                                    break;
                                case EstadoReserva.Cancelada:
                                    <span class="badge bg-danger">@Html.DisplayFor(modelItem => item.EstadoDisplay)</span>
                                    break;
                                case EstadoReserva.Finalizada:
                                    <span class="badge bg-primary">@Html.DisplayFor(modelItem => item.EstadoDisplay)</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">@Html.DisplayFor(modelItem => item.EstadoDisplay)</span>
                                    break;
                            }
                        </td>
                        <td>@item.FechaCreacion.ToString("dd/MM/yyyy hh:mm tt")</td>
                        <td>@item.FechaModificacion.ToString("dd/MM/yyyy hh:mm tt")</td>
                        <td>
                            @if (item.Activo)
                            {
                                <span class="badge bg-success">Activo</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactivo</span>
                            }
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center gap-1">
                                @if (item.Estado == EstadoReserva.Pendiente || item.Estado == EstadoReserva.Confirmada)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Editar reserva">
                                        <i class="bi bi-pencil">Editar</i>
                                    </a>
                                }
                                @if (item.Estado == EstadoReserva.Confirmada)
                                {
                                    <form asp-action="Cancel" asp-controller="Reservas" method="get" asp-route-id="@item.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Cancelar reserva">
                                            <i class="bi bi-x-circle">Cancelar</i>
                                        </button>
                                    </form>
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="11" class="text-center py-4">
                        <div class="text-muted">
                            <i class="bi bi-inbox fs-1"></i>
                            <p class="mt-2">Este cliente no tiene reservas registradas.</p>
                            <small><a asp-action="Create">Crear una nueva reserva</a> para este cliente.</small>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>